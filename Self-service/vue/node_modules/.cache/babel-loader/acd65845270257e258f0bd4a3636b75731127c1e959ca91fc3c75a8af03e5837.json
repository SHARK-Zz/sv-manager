{"ast":null,"code":"export default {\n  name: \"Banner\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      businessList: [],\n      //商家数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      name: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        name: [{\n          required: true,\n          message: '请选择商家',\n          trigger: 'blur'\n        }]\n      },\n      ids: []\n    };\n  },\n  created() {\n    this.load(1);\n    this.$request.get('/banner/selectAll', {\n      params: {\n        status: '通过'\n      }\n    }).then(res => {\n      this.bannerList = res.data || [];\n    });\n    this.$request.get('/business/selectAll', {\n      params: {\n        status: '通过'\n      }\n    }).then(res => {\n      this.businessList = res.data;\n    });\n  },\n  methods: {\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); //给form对象赋值（要深拷贝数据）\n      console.log(this.form);\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/category/update' : '/category/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              if (this.fromVisible = true) {\n                this.fromVisible = false;\n              }\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/category/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id);\n    },\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/category/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/category/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.name = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    },\n    handleFileSuccess(response, file, fileList) {\n      this.form.img = response.data;\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","businessList","pageNum","pageSize","total","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","required","message","trigger","ids","created","load","$request","get","params","status","then","res","bannerList","methods","handleAdd","handleEdit","row","stringify","console","log","save","$refs","formRef","validate","valid","url","id","method","code","$message","success","error","msg","del","$confirm","type","response","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","list","reset","handleCurrentChange","handleFileSuccess","file","fileList","img"],"sources":["src/views/manager/Banner.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"search\">\r\n      <el-input placeholder=\"请输入商家名称\" style=\"width: 200px\" v-model=\"name\"></el-input>\r\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\r\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\r\n    </div>\r\n\r\n    <div class=\"operation\">\r\n      <el-button type=\"primary\" plain @click=\"handleAdd\">新增</el-button>\r\n      <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\r\n    </div>\r\n\r\n    <div class=\"table\">\r\n      <el-table :data=\"tableData\" strip @selection-change=\"handleSelectionChange\">\r\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"id\" label=\"序号\" width=\"70\" align=\"center\" sortable></el-table-column>\r\n        <el-table-column prop=\"img\" label=\"图片\">\r\n          <template v-slot=\"scope\">\r\n            <div style=\"display: flex; align-items: center\">\r\n              <el-image style=\"width: 40px; height: 40px;\" v-if=\"scope.row.img\"\r\n                        :src=\"scope.row.img\" :preview-src-list=\"[scope.row.img]\"></el-image>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"businessId\" label=\"商家ID\"></el-table-column>\r\n        <el-table-column prop=\"BusinessName\" label=\"商家\"></el-table-column>\r\n        <el-table-column label=\"操作\" align=\"center\" width=\"180\">\r\n          <template v-slot=\"scope\">\r\n            <el-button size=\"mini\" type=\"primary\" plain @click=\"handleEdit(scope.row)\">编辑</el-button>\r\n            <el-button size=\"mini\" type=\"danger\" plain @click=\"del(scope.row.id)\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <div class=\"pagination\">\r\n        <el-pagination\r\n            background\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"pageNum\"\r\n            :page-sizes=\"[5, 10, 20]\"\r\n            :page-size=\"pageSize\"\r\n            layout=\"total, prev, pager, next\"\r\n            :total=\"total\">\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n\r\n    <el-dialog title=\"广告信息\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n      <div style=\"height: 300px; overflow: auto\">\r\n        <el-form :model=\"form\" label-width=\"100px\" style=\"padding-right: 50px\" :rules=\"rules\" ref=\"formRef\">\r\n          <el-form-item label=\"图片\" prop=\"img\">\r\n            <el-upload\r\n                :action=\"$baseUrl + '/files/upload'\"\r\n                :headers=\"{ token: user.token }\"\r\n                :on-success=\"handleFileSuccess\"\r\n            >\r\n              <el-button type=\"primary\">上传</el-button>\r\n            </el-upload>\r\n          </el-form-item>\r\n          <el-form-item label=\"商家\" prop=\"bannerId\">\r\n            <el-select style=\"width: 100%\" v-model=\"form.businessId\">\r\n              <el-option v-for=\"item in businessList\" :key=\"item.id\" :value=\"item.id\" :label=\"item.name\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"fromVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Banner\",\r\n  data() {\r\n    return {\r\n      tableData: [],  // 所有的数据\r\n      businessList:[], //商家数据\r\n      pageNum: 1,   // 当前的页码\r\n      pageSize: 10,  // 每页显示的个数\r\n      total: 0,\r\n      name: null,\r\n      fromVisible: false,\r\n      form: {},\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      rules: {\r\n        name: [\r\n          {required: true, message: '请选择商家', trigger: 'blur'},\r\n        ],\r\n      },\r\n      ids: []\r\n    }\r\n  },\r\n  created() {\r\n    this.load(1)\r\n\r\n    this.$request.get('/banner/selectAll', {\r\n      params: {\r\n        status: '通过'\r\n      }\r\n    }).then(res => {\r\n      this.bannerList = res.data || []\r\n    })\r\n\r\n    this.$request.get('/business/selectAll', {\r\n      params: {\r\n        status: '通过'\r\n      }\r\n    }).then(res => {\r\n      this.businessList = res.data\r\n    })\r\n  },\r\n\r\n  methods: {\r\n    handleAdd() {   // 新增数据\r\n      this.form = {}  // 新增数据的时候清空数据\r\n      this.fromVisible = true// 打开弹窗\r\n    },\r\n    handleEdit(row) {   // 编辑数据\r\n      this.form = JSON.parse(JSON.stringify(row))//给form对象赋值（要深拷贝数据）\r\n      console.log(this.form)\r\n      this.fromVisible = true   // 打开弹窗\r\n    },\r\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n      this.$refs.formRef.validate((valid) => {\r\n        if (valid) {\r\n          this.$request({\r\n            url: this.form.id ? '/category/update' : '/category/add',\r\n            method: this.form.id ? 'PUT' : 'POST',\r\n            data: this.form\r\n          }).then(res => {\r\n            if (res.code === '200') {  // 表示成功保存\r\n              this.$message.success('保存成功')\r\n              this.load(1)\r\n              if (this.fromVisible = true){\r\n                this.fromVisible = false\r\n              }\r\n            } else {\r\n              this.$message.error(res.msg)  // 弹出错误的信息\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    del(id) {   // 单个删除\r\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/category/delete/' + id).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n      this.ids = rows.map(v => v.id)\r\n    },\r\n    delBatch() {   // 批量删除\r\n      if (!this.ids.length) {\r\n        this.$message.warning('请选择数据')\r\n        return\r\n      }\r\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/category/delete/batch', {data: this.ids}).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    load(pageNum) {  // 分页查询\r\n      if (pageNum) this.pageNum = pageNum\r\n      this.$request.get('/category/selectPage', {\r\n        params: {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n          name: this.name,\r\n        }\r\n      }).then(res => {\r\n        this.tableData = res.data?.list\r\n        this.total = res.data?.total\r\n      })\r\n    },\r\n    reset() {\r\n      this.name = null\r\n      this.load(1)\r\n    },\r\n    handleCurrentChange(pageNum) {\r\n      this.load(pageNum)\r\n    },\r\n    handleFileSuccess(response, file, fileList) {\r\n      this.form.img = response.data\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n/deep/.avatar-uploader .el-upload {\r\n  border: 1px dashed #d9d9d9;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n  border-radius: 50%;\r\n}\r\n/deep/.avatar-uploader .el-upload:hover {\r\n  border-color: #409EFF;\r\n}\r\n\r\n.avatar {\r\n  width: 120px;\r\n  height: 120px;\r\n  display: block;\r\n  border-radius: 50%;\r\n}\r\n.license {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}